;; Object completion/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "completion/"
  :tables (list 
    (semanticdb-table "pycomplete.py"
    :major-mode 'python-mode
    :tags 
        '( (""""
Python dot expression completion using Pymacs.

This almost certainly needs work, but if you add

(require 'pycomplete)

to your init.el file and have Pymacs installed, when you hit M-TAB it will
try to complete the dot expression before point.  For example, given this
import at the top of the file:

import time

typing "time.cl" then hitting M-TAB should complete "time.clock".

This is unlikely to be done the way Emacs completion ought to be done, but
it's a start.  Perhaps someone with more Emacs mojo can take this stuff and
do it right.

See pycomplete.el for the Emacs Lisp side of things.

Most of the public functions in this module have the signature

(s, fname=None, imports=None)

where s is the symbol to complete, fname is the file path and imports
the list of import statements to use. The fname parameter is used as a
key to cache the global and local context and the symbols imported or
evaluated so far. The cache for an fname is cleared when its imports
are changed. When not passing a list of imports (or None), the currently
used imports are preserved. The caching should make subsequent operations
(e.g. another completion or signature lookup after a completion) less
expensive.
"""" code nil nil [1 1212])
            ("sys" include nil nil [1816 1826])
            ("types" include nil nil [1827 1839])
            ("inspect" include nil nil [1840 1854])
            ("keyword" include nil nil [1855 1869])
            ("os" include nil nil [1870 1879])
            ("pydoc" include nil nil [1880 1892])
            ("ast" include nil nil [1893 1903])
            ("re" include nil nil [1904 1913])
            ("if" code nil nil [1915 2006])
            ("try" code nil nil [2007 2090])
            ("_PyCompleteDocument" type
               (:superclasses ("object")
                :members 
                  ( (""""Completion data for Python source file."""" code nil (reparse-symbol indented_block_body) [2131 2176])
                    ("if" code nil (reparse-symbol indented_block_body) [2182 3579])
                    ("_sre_SRE_Pattern" variable nil (reparse-symbol indented_block_body) [3584 3623])
                    ("_sre_SRE_Match" variable nil (reparse-symbol indented_block_body) [3628 3667])
                    ("_class_name_re" variable nil (reparse-symbol indented_block_body) [3742 3802])
                    ("_return_type_of_func" variable nil (reparse-symbol indented_block_body) [3808 5724])
                    ("staticmethod" code nil (reparse-symbol indented_block_body) [5731 5743])
                    ("_get_type_for_function" function (:arguments 
                      ( ("funcname" variable nil (reparse-symbol function_parameters) [5775 5783]))                      ) (reparse-symbol indented_block_body) [5748 6015])
                    ("staticmethod" code nil (reparse-symbol indented_block_body) [6021 6033])
                    ("_replace_pycfrt_with_typename" function (:arguments 
                      ( ("s" variable nil (reparse-symbol function_parameters) [6072 6073]))                      ) (reparse-symbol indented_block_body) [6038 6724])
                    ("ImportExtractor" type
                       (:superclasses ("ast.NodeVisitor")
                        :members 
                          ( (""""NodeVisitor to extract the top-level import statements from an AST.

        To generate code containing all imports in try-except statements,
        call get_import_code(node), where node is a parsed AST.
        """" code nil (reparse-symbol indented_block_body) [6777 6998])
                            ("visit_FunctionDef" function (:arguments 
                              ( ("self" variable nil (reparse-symbol function_parameters) [7029 7033])
                                ("node" variable nil (reparse-symbol function_parameters) [7035 7039]))                              ) (reparse-symbol indented_block_body) [7007 7117])
                            ("visit_ClassDef" function (:arguments 
                              ( ("self" variable nil (reparse-symbol function_parameters) [7145 7149])
                                ("node" variable nil (reparse-symbol function_parameters) [7151 7155]))                              ) (reparse-symbol indented_block_body) [7126 7220])
                            ("generic_visit" function (:arguments 
                              ( ("self" variable nil (reparse-symbol function_parameters) [7247 7251])
                                ("node" variable nil (reparse-symbol function_parameters) [7253 7257]))                              ) (reparse-symbol indented_block_body) [7229 7469])
                            ("get_import_code" function (:arguments 
                              ( ("self" variable nil (reparse-symbol function_parameters) [7498 7502])
                                ("node" variable nil (reparse-symbol function_parameters) [7504 7508])
                                ("fname" variable nil (reparse-symbol function_parameters) [7510 7515]))                              ) (reparse-symbol indented_block_body) [7478 8583]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [6729 8583])
                    ("CodeRemover" type
                       (:superclasses ("ast.NodeTransformer")
                        :members 
                          ( (""""NodeTransformer which replaces function statements with 'pass'
        and keeps only safe assignments, so that the resulting code can
        be used for code completion.

        To reduce the code from the node of a parsed AST, call
        get_transformed_code(node).
        """" code nil (reparse-symbol indented_block_body) [8637 8923])
                            ("visit_FunctionDef" function (:arguments 
                              ( ("self" variable nil (reparse-symbol function_parameters) [8954 8958])
                                ("node" variable nil (reparse-symbol function_parameters) [8960 8964]))                              ) (reparse-symbol indented_block_body) [8932 9596])
                            ("visit_Expr" function (:arguments 
                              ( ("self" variable nil (reparse-symbol function_parameters) [9620 9624])
                                ("node" variable nil (reparse-symbol function_parameters) [9626 9630]))                              ) (reparse-symbol indented_block_body) [9605 9806])
                            ("staticmethod" code nil (reparse-symbol indented_block_body) [9816 9828])
                            ("_get_type_node_for_function_node" function (:arguments 
                              ( ("node" variable nil (reparse-symbol function_parameters) [9874 9878]))                              ) (reparse-symbol indented_block_body) [9837 10739])
                            ("staticmethod" code nil (reparse-symbol indented_block_body) [10749 10761])
                            ("replace_unsafe_value" function (:arguments 
                              ( ("node" variable nil (reparse-symbol function_parameters) [10795 10799])
                                ("replace_self" variable nil (reparse-symbol function_parameters) [10801 10813]))                              ) (reparse-symbol indented_block_body) [10770 14067])
                            ("visit_Assign" function (:arguments 
                              ( ("self" variable nil (reparse-symbol function_parameters) [14093 14097])
                                ("node" variable nil (reparse-symbol function_parameters) [14099 14103]))                              ) (reparse-symbol indented_block_body) [14076 14218])
                            ("visit_Name" function (:arguments 
                              ( ("self" variable nil (reparse-symbol function_parameters) [14242 14246])
                                ("node" variable nil (reparse-symbol function_parameters) [14248 14252]))                              ) (reparse-symbol indented_block_body) [14227 14327])
                            ("visit_Attribute" function (:arguments 
                              ( ("self" variable nil (reparse-symbol function_parameters) [14356 14360])
                                ("node" variable nil (reparse-symbol function_parameters) [14362 14366]))                              ) (reparse-symbol indented_block_body) [14336 14446])
                            ("visit_ClassDef" function (:arguments 
                              ( ("self" variable nil (reparse-symbol function_parameters) [14474 14478])
                                ("node" variable nil (reparse-symbol function_parameters) [14480 14484]))                              ) (reparse-symbol indented_block_body) [14455 15489])
                            ("visit_Module" function (:arguments 
                              ( ("self" variable nil (reparse-symbol function_parameters) [15515 15519])
                                ("node" variable nil (reparse-symbol function_parameters) [15521 15525]))                              ) (reparse-symbol indented_block_body) [15498 15629])
                            ("generic_visit" function (:arguments 
                              ( ("self" variable nil (reparse-symbol function_parameters) [15656 15660])
                                ("node" variable nil (reparse-symbol function_parameters) [15662 15666]))                              ) (reparse-symbol indented_block_body) [15638 15767])
                            ("get_transformed_code" function (:arguments 
                              ( ("self" variable nil (reparse-symbol function_parameters) [15801 15805])
                                ("node" variable nil (reparse-symbol function_parameters) [15807 15811])
                                ("fname" variable nil (reparse-symbol function_parameters) [15813 15818]))                              ) (reparse-symbol indented_block_body) [15776 16396]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [8589 16396])
                    ("_stdout" variable nil (reparse-symbol indented_block_body) [16401 16421])
                    ("_instances" variable nil (reparse-symbol indented_block_body) [16427 16442])
                    ("__init__" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [16461 16465])
                        ("fname" variable nil (reparse-symbol function_parameters) [16467 16472]))                      ) (reparse-symbol indented_block_body) [16448 16789])
                    ("classmethod" code nil (reparse-symbol indented_block_body) [16795 16806])
                    ("instance" function (:arguments 
                      ( ("cls" variable nil (reparse-symbol function_parameters) [16824 16827])
                        ("fname" variable nil (reparse-symbol function_parameters) [16829 16834]))                      ) (reparse-symbol indented_block_body) [16811 17166])
                    ("_import_modules" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [17191 17195])
                        ("imports" variable nil (reparse-symbol function_parameters) [17197 17204]))                      ) (reparse-symbol indented_block_body) [17171 18044])
                    ("_collect_symbol_names" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [18075 18079]))                      ) (reparse-symbol indented_block_body) [18049 18471])
                    ("_get_symbol_object" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [18499 18503])
                        ("s" variable nil (reparse-symbol function_parameters) [18505 18506]))                      ) (reparse-symbol indented_block_body) [18476 19347])
                    ("_load_symbol" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [19369 19373])
                        ("s" variable nil (reparse-symbol function_parameters) [19375 19376])
                        ("strict" variable nil (reparse-symbol function_parameters) [19378 19384]))                      ) (reparse-symbol indented_block_body) [19352 20417])
                    ("_get_help" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [20436 20440])
                        ("s" variable nil (reparse-symbol function_parameters) [20442 20443])
                        ("imports" variable nil (reparse-symbol function_parameters) [20445 20452]))                      ) (reparse-symbol indented_block_body) [20422 21151])
                    ("staticmethod" code nil (reparse-symbol indented_block_body) [21157 21169])
                    ("_find_constructor" function (:arguments 
                      ( ("class_ob" variable nil (reparse-symbol function_parameters) [21196 21204]))                      ) (reparse-symbol indented_block_body) [21174 21666])
                    ("get_all_completions" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [21695 21699])
                        ("s" variable nil (reparse-symbol function_parameters) [21701 21702])
                        ("imports" variable nil (reparse-symbol function_parameters) [21704 21711]))                      ) (reparse-symbol indented_block_body) [21671 22439])
                    ("complete" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [22457 22461])
                        ("s" variable nil (reparse-symbol function_parameters) [22463 22464])
                        ("imports" variable nil (reparse-symbol function_parameters) [22466 22473]))                      ) (reparse-symbol indented_block_body) [22444 22975])
                    ("help" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [22989 22993])
                        ("s" variable nil (reparse-symbol function_parameters) [22995 22996])
                        ("imports" variable nil (reparse-symbol function_parameters) [22998 23005]))                      ) (reparse-symbol indented_block_body) [22980 23170])
                    ("get_docstring" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [23193 23197])
                        ("s" variable nil (reparse-symbol function_parameters) [23199 23200])
                        ("imports" variable nil (reparse-symbol function_parameters) [23202 23209]))                      ) (reparse-symbol indented_block_body) [23175 23648])
                    ("get_signature" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [23671 23675])
                        ("s" variable nil (reparse-symbol function_parameters) [23677 23678])
                        ("imports" variable nil (reparse-symbol function_parameters) [23680 23687]))                      ) (reparse-symbol indented_block_body) [23653 25079])
                    ("get_location" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [25101 25105])
                        ("s" variable nil (reparse-symbol function_parameters) [25107 25108])
                        ("imports" variable nil (reparse-symbol function_parameters) [25110 25117]))                      ) (reparse-symbol indented_block_body) [25084 25996])
                    ("parse_source" function (:arguments 
                      ( ("self" variable nil (reparse-symbol function_parameters) [26018 26022])
                        ("only_reload" variable nil (reparse-symbol function_parameters) [26024 26035]))                      ) (reparse-symbol indented_block_body) [26001 27607]))                  
                :type "class")
                nil [2092 27607])
            ("pycompletions" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [27626 27627])
                ("fname" variable nil (reparse-symbol function_parameters) [27629 27634])
                ("imports" variable nil (reparse-symbol function_parameters) [27641 27648]))              ) nil [27608 27866])
            ("pycomplete" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [27882 27883])
                ("fname" variable nil (reparse-symbol function_parameters) [27885 27890])
                ("imports" variable nil (reparse-symbol function_parameters) [27897 27904]))              ) nil [27867 28299])
            ("pyhelp" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [28311 28312])
                ("fname" variable nil (reparse-symbol function_parameters) [28314 28319])
                ("imports" variable nil (reparse-symbol function_parameters) [28326 28333]))              ) nil [28300 28440])
            ("pydocstring" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [28457 28458])
                ("fname" variable nil (reparse-symbol function_parameters) [28460 28465])
                ("imports" variable nil (reparse-symbol function_parameters) [28472 28479]))              ) nil [28441 28598])
            ("pysignature" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [28615 28616])
                ("fname" variable nil (reparse-symbol function_parameters) [28618 28623])
                ("imports" variable nil (reparse-symbol function_parameters) [28630 28637]))              ) nil [28599 28767])
            ("pylocation" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [28783 28784])
                ("fname" variable nil (reparse-symbol function_parameters) [28786 28791])
                ("imports" variable nil (reparse-symbol function_parameters) [28798 28805]))              ) nil [28768 28958])
            ("pyparse" function (:arguments 
              ( ("fname" variable nil (reparse-symbol function_parameters) [28971 28976])
                ("only_reload" variable nil (reparse-symbol function_parameters) [28978 28989]))              ) nil [28959 29393]))          
    :file "pycomplete.py"
    :pointmax 29447
    :fsize 30222
    :lastmodtime '(20737 32328)
    :unmatched-syntax '((INDENT_BLOCK 27558 . 27587) (NEWLINE 27557 . 27558) (COLON 27556 . 27557) (TRY 27475 . 27478) (AS 27551 . 27553) (INDENT_BLOCK 27259 . 27328) (NEWLINE 27258 . 27259) (COLON 27257 . 27258) (TRY 27177 . 27180) (AS 27252 . 27254) (INDENT_BLOCK 27055 . 27084) (NEWLINE 27054 . 27055) (COLON 27053 . 27054) (TRY 26872 . 26875) (AS 27048 . 27050) (INDENT_BLOCK 26747 . 26776) (NEWLINE 26746 . 26747) (COLON 26745 . 26746) (TRY 26638 . 26641) (AS 26740 . 26742) (INDENT_BLOCK 26685 . 26717) (NEWLINE 26684 . 26685) (COLON 26683 . 26684) (NAME 26655 . 26659) (NAME 26660 . 26664) (AS 26678 . 26680) (INDENT_BLOCK 23989 . 24018) (NEWLINE 23988 . 23989) (COLON 23987 . 23988) (TRY 23857 . 23860) (AS 23982 . 23984) (INDENT_BLOCK 23141 . 23170) (NEWLINE 23140 . 23141) (COLON 23139 . 23140) (TRY 23058 . 23061) (AS 23134 . 23136) (punctuation 21156 . 21157) (INDENT_BLOCK 20888 . 20921) (NEWLINE 20887 . 20888) (COLON 20886 . 20887) (TRY 20744 . 20747) (AS 20881 . 20883) (punctuation 16794 . 16795) (punctuation 10748 . 10749) (punctuation 9815 . 9816) (NAME 9252 . 9262) (IF 9278 . 9280) (ELSE 9300 . 9304) (punctuation 6020 . 6021) (punctuation 5730 . 5731) (punctuation 3452 . 3453) (punctuation 3359 . 3360) (punctuation 3266 . 3267) (punctuation 3166 . 3167) (punctuation 3046 . 3047) (punctuation 2925 . 2926) (punctuation 2738 . 2739) (punctuation 2646 . 2647) (punctuation 2552 . 2553) (punctuation 2460 . 2461) (punctuation 2369 . 2370) (punctuation 2261 . 2262) (INDENT_BLOCK 27558 . 27587) (NEWLINE 27557 . 27558) (COLON 27556 . 27557) (TRY 27475 . 27478) (AS 27551 . 27553) (INDENT_BLOCK 27259 . 27328) (NEWLINE 27258 . 27259) (COLON 27257 . 27258) (TRY 27177 . 27180) (AS 27252 . 27254) (INDENT_BLOCK 27055 . 27084) (NEWLINE 27054 . 27055) (COLON 27053 . 27054) (TRY 26872 . 26875) (AS 27048 . 27050) (INDENT_BLOCK 26747 . 26776) (NEWLINE 26746 . 26747) (COLON 26745 . 26746) (TRY 26638 . 26641) (AS 26740 . 26742) (INDENT_BLOCK 26685 . 26717) (NEWLINE 26684 . 26685) (COLON 26683 . 26684) (NAME 26655 . 26659) (NAME 26660 . 26664) (AS 26678 . 26680) (INDENT_BLOCK 23989 . 24018) (NEWLINE 23988 . 23989) (COLON 23987 . 23988) (TRY 23857 . 23860) (AS 23982 . 23984) (INDENT_BLOCK 23141 . 23170) (NEWLINE 23140 . 23141) (COLON 23139 . 23140) (TRY 23058 . 23061) (AS 23134 . 23136) (punctuation 21156 . 21157) (INDENT_BLOCK 20888 . 20921) (NEWLINE 20887 . 20888) (COLON 20886 . 20887) (TRY 20744 . 20747) (AS 20881 . 20883) (punctuation 16794 . 16795) (punctuation 10748 . 10749) (punctuation 9815 . 9816) (NAME 9252 . 9262) (IF 9278 . 9280) (ELSE 9300 . 9304) (punctuation 6020 . 6021) (punctuation 5730 . 5731) (punctuation 3452 . 3453) (punctuation 3359 . 3360) (punctuation 3266 . 3267) (punctuation 3166 . 3167) (punctuation 3046 . 3047) (punctuation 2925 . 2926) (punctuation 2738 . 2739) (punctuation 2646 . 2647) (punctuation 2552 . 2553) (punctuation 2460 . 2461) (punctuation 2369 . 2370) (punctuation 2261 . 2262))
    )
   (semanticdb-table "test_pycomplete.py"
    :major-mode 'python-mode
    :tags 
        '( ("os" include nil nil [24 33])
            ("linecache" include nil nil [34 50])
            ("tempfile" include nil nil [51 66])
            ("pycomplete" include nil nil [67 91])
            ("test_signature" function nil nil [93 865])
            ("test_help" function nil nil [866 1445])
            ("test_complete" function nil nil [1446 2318])
            ("test_completions" function nil nil [2319 2911])
            ("test_location" function nil nil [2912 3213])
            ("test_docstring" function nil nil [3214 3770])
            ("test_parse_source" function nil nil [3771 9013])
            ("run_tests" function nil nil [9014 9176])
            ("if" code nil nil [9177 9220]))          
    :file "test_pycomplete.py"
    :pointmax 9220
    :fsize 9457
    :lastmodtime '(20737 32376)
    :unmatched-syntax '((INDENT_BLOCK 3918 . 9013) (NEWLINE 3917 . 3918) (COLON 3916 . 3917) (NAME 3892 . 3896) (NAME 3897 . 3905) (AS 3911 . 3913) (INDENT_BLOCK 3918 . 9013) (NEWLINE 3917 . 3918) (COLON 3916 . 3917) (NAME 3892 . 3896) (NAME 3897 . 3905) (AS 3911 . 3913))
    )
   )
  :file "!drive_c!home!.emacs.d!vendor!completion!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
